{"uuid":"049c81ed-22bf-4a3c-95f9-9568828f844e","historyId":"153aab8ed32a4b711f0ac0a1ec12c0f0","fullName":"io.cucumber.testng.AbstractTestNGCucumberTests.runScenario","labels":[{"name":"package","value":"com.example.task2.runner.CucumberRunnerTests"},{"name":"testClass","value":"com.example.task2.runner.CucumberRunnerTests"},{"name":"testMethod","value":"runScenario"},{"name":"parentSuite","value":"Suite"},{"name":"suite","value":"Rest Assured, Cucumber with TestNG Test"},{"name":"subSuite","value":"com.example.task2.runner.CucumberRunnerTests"},{"name":"host","value":"DESKTOP-P8701K1"},{"name":"thread","value":"12412@DESKTOP-P8701K1.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[],"name":"Runs Cucumber Scenarios","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"1 expectation failed.\nJSON path error doesn't match.\nExpected: Price must be a positive value\n  Actual: Price is required and must be positive\n","trace":"java.lang.AssertionError: 1 expectation failed.\nJSON path error doesn't match.\nExpected: Price must be a positive value\n  Actual: Price is required and must be positive\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\r\n\tat io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat com.example.task2.stepdefinitions.ProductAPI.verifyErrorMessage(ProductAPI.java:92)\r\n\tat âœ½.the response should contain error message \"Price must be a positive value\"(file:///C:/Users/LENOVO/Downloads/task2/task2/src/test/resources/features/ProductAPI.feature:19)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"arg1","value":"\"Product API Testing\""},{"name":"arg0","value":"\"Create a product with missing or invalid details\""}],"start":1742271625173,"stop":1742271625206}